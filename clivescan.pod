=head1 NAME

clivescan - the video link scanning utility for clive

=head1 SYNOPSIS

clivescan [option]... [URL]...

=head1 DESCRIPTION

clivescan is an utility that scans video pages for video links and
uses L<clive(1)> (or <cclive(1)>) to extract them. It scans for both video
page and embedded video links.

Historically, the video link scanning feature was written in Python/Newt and
was part of L<clive(1)>. This feature was originally removed in clive 2.0
and later rewritten in Perl/Tk as part of the B<clive-utils> project which
is a set of additional utilities for L<clive(1)>.

=head1 OPTION SYNTAX

You may freely mix different option styles, or specify options after the
command-line arguments. For example:
  % clivescan -c /usr/local/bin/clive --opts=mp4 URL -a

You may also put several options together that do not require arguments.
For example:
  % clivescan -aXc /usr/local/bin/clive URL

Which is equivalent to:
  % clivescan -a -X -c /usr/local/bin/clive URL

=head1 OPTIONS

=over 4

=item B<-h, --help>

Show help and exit.

=item B<-v, --version>

Show version and exit.

=item B<-c, --clive=>I<path>

I<path> to L<clive(1)> command. If unspecified, clivescan will attempt to
locate it in the $PATH. Additionally, the B<CLIVE_PATH> environment variable
can be used.

=item B<-o, --opts=>I<opts>

I<opts> to append to clive call. See L<clive(1)> for more on the available
options.

=item B<-a, --all>

Grab all videos without prompting the GUI. Note that users without X can use
this option to workaround the X requirement.

=item B<-r, --recall>

Recall the last input.

=item B<-s, --selected>

Re-extract the last video selection.

=item B<-n, --no-strict>

This option provides a workaround for some search pattern issues that
are known to occur. For example:
 % clivescan "http://video.google.com/videosearch?q=inurl%3Abreak"

Does not return any break.com videos even though the page lists them.
This happens because clivescan assumes that the domain break.com can
be found in the URL. To override this restrictive default behaviour:
 % clivescan -n "http://video.google.com/videosearch?q=inurl%3Abreak"

=item B<-p, --paste>

Paste URL input data from clipboard.

=back

B<HTTP Options>

=over 4

=item B<-U, --agent=>I<string>

Identify as I<string> to the HTTP server. Defaults to "Mozilla/5.0".

=item B<-y, --proxy=>I<address>

Use I<address> for HTTP proxy, e.g. http://foo:1234. If http_proxy
environment variable is defined, it will be used.

=item B<-X, --no-proxy>

Do not use the defined HTTP proxy (B<--proxy>, config or http_proxy).

=back

=head1 EXAMPLES

=over 4

=item Typical use:

% clivescan youtube.com video.google.com

=item Multiple scan URLs:

% cat E<gt>E<gt> url.lst
  http://video.google.com
  http://youtube.com/communitychannel
  http://sevenload.com
  http://break.com

% cat url.lst | clivescan

=item Set path to L<clive(1)> with video extraction options:

% clivescan --clive=/usr/local/bin/clive --opts="-f mp4" URL

=item Grab all found videos without prompting:

% clivescan --all http://youtube.com

Note that users without X can also use this.

=back

=head1 FILES

clivescan searches the ~/.config/clive-utils directory for the config file.
You can override this by setting the B<CLIVESCAN_HOME> environment variable.

=over 4

=item ~/.config/clive-utils/config

Configuration file.

=item ~/.config/clive-utils/scan.prefs

GUI preferences (e.g. fonts, window position, sash coords, ...).

=item ~/.config/clive-utils/scan.recall

Last input.

=item ~/.config/clive-utils/scan.sel

Last video selection.

=back

=head1 SEE ALSO

L<clive(1)> L<cclive(1)> L<clivefeed(1)> L<clivepass(1)>

=head1 OTHER

Project page:
  <http://googlecode.com/p/clive-utils/>

Development repository can be cloned with:
  % git clone git://repo.or.cz/clive-utils.git

For release announcements, subscribe to the project at:
  <http://freshmeat.net/projects/clive-utils/>

=head1 AUTHOR

Written by Toni Gundogdu <legatvs@gmail.com>

=cut
