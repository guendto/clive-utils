=head1 NAME

clivescan - the video link scanning utility for clive

=head1 SYNOPSIS

clivescan [option]... [URL]...

=head1 DESCRIPTION

clivescan is an utility that scans video pages for video links and
uses L<clive(1)> to extract them. The utility scans for video page
and embedded video links.

Historically, the video link scanning function was part of L<clive(1)>
and it was written in Python/Newt. The clivescan utility was written
in Perl/Tk to replace the feature that was removed in clive 2.0. This
utility is part of the B<clive-utils> project.

=head1 OPTIONS

You may freely specify options after the command-line arguments. For example:

    % clivescan -a URL --opts=--noextract

B<Basic Options>

=over 4

=item B<-h --help>

Show help and exit.

=item B<-v --version>

Show version and exit.

=item B<-c --clive=>I<path>

I<path> to L<clive(1)> command. If unspecified, clivescan will attempt to
locate it in the $PATH. Additionally, the B<CLIVE_PATH> environment variable
can be used. See also L</CONFIG>. 

=item B<-o --opts=>I<opts>

I<opts> to append to clive call. See L<clive(1)> for more on the available
options.

=item B<-a --all>

Grab all videos without prompting the GUI. Note that users without X can use
this option to workaround the X requirement.

=item B<-n --no-strict>

This option provides a workaround for some search pattern issues that
are known to occur. For example:

 % clivescan "http://video.google.com/videosearch?q=inurl%3Abreak"

Does not return any break.com videos even though the page lists them.
This happens because clivescan assumes that the domain break.com can
be found in the URL. To override this restrictive default behaviour:

 % clivescan -S "http://video.google.com/videosearch?q=inurl%3Abreak"

=item B<-p, --paste>

Paste URL input data from clipboard.

=back

B<HTTP Options>

=over 4

=item B<-U --agent=>I<string>

Identify as I<string> to the HTTP server. Defaults to "Mozilla/5.0".

=item B<-y --proxy=>I<address>

Use I<address> for HTTP proxy, e.g. http://foo:1234. If http_proxy
environment variable is defined, it will be used.

=item B<-X --no-proxy>

Do not use the defined HTTP proxy (B<--proxy>, config or http_proxy).

=back

=head1 EXAMPLES

=over 4

=item % clivescan youtube.com video.google.com

Scans both, Youtube and GoogleVideo front pages for video links.

=item % cat E<gt>E<gt> url.lst

 http://video.google.com
 http://youtube.com/communitychannel
 http://sevenload.com
 http://break.com

=item % cat url.lst | clivescan

Reads input from UNIX pipe.

=item % clivescan --opts="-f mp4"

Appends the I<opts> to the L<clive(1)> call.

=item % clivescan --all http://youtube.com

Grabs all found videos from the Youtube front page.

=back

=head1 FILES

clivescan searches the ~/.config/clive-utils directory for the config file.
You can override this by setting the B<CLIVESCAN_HOME> environment variable.

=over 4

=item ~/.config/clive-utils/config

Configuration file.

=item ~/.config/clive-utils/scan.prefs

GUI preferences (e.g. fonts, window position, sash coords, ...).

=back

=head1 CONFIG

 ## Example config file for clivescan.

 [clive]
   path = /usr/local/bin/clive
   opts = -f mp4

 [http]
   agent = Mozilla/5.0
   proxy = http://foo:1234

=head1 SEE ALSO

L<clive(1)> L<clivefeed(1)>

=head1 OTHER

Project: http://googlecode.com/p/clive-utils/

A clive-utils development repository can be obtained from:

    % git clone git://repo.or.cz/clive-utils.git

Patches welcome.

=head1 AUTHOR

Written by Toni Gundogdu <legatvs@gmail.com>

=cut
