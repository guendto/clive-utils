.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.35
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "clivescan 1"
.TH clivescan 1 "2009-02-19" "2.1.3" "clivescan manual"
.SH "NAME"
clivescan \- the video link scanning utility for clive
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
clivescan [option]... [\s-1URL\s0]...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
clivescan is an utility that scans video pages for video links and
uses \fIclive\fR\|(1) to extract them. The utility scans for video page
and embedded video links.
.PP
Historically, the video link scanning function was part of \fIclive\fR\|(1)
and it was written in Python/Newt. The clivescan utility was written
in Perl/Tk to replace the feature that was removed in clive 2.0. This
utility is part of the \fBclive-utils\fR project.
.SH "OPTIONS"
.IX Header "OPTIONS"
You may freely specify options after the command-line arguments. For example:
.PP
.Vb 1
\&    % clivescan -a URL --opts=--noextract
.Ve
.PP
\&\fBBasic Options\fR
.IP "\fB\-h \-\-help\fR" 4
.IX Item "-h --help"
Show help and exit.
.IP "\fB\-v \-\-version\fR" 4
.IX Item "-v --version"
Show version and exit.
.IP "\fB\-c \-\-clive=\fR\fIpath\fR" 4
.IX Item "-c --clive=path"
\&\fIpath\fR to \fIclive\fR\|(1) command. If unspecified, clivescan will attempt to
locate it in the \f(CW$PATH\fR. Additionally, the \fB\s-1CLIVE_PATH\s0\fR environment variable
can be used. See also \*(L"\s-1CONFIG\s0\*(R". 
.IP "\fB\-o \-\-opts=\fR\fIopts\fR" 4
.IX Item "-o --opts=opts"
\&\fIopts\fR to append to clive call. See \fIclive\fR\|(1) for more on the available
options.
.IP "\fB\-a \-\-all\fR" 4
.IX Item "-a --all"
Grab all videos without prompting the \s-1GUI\s0.
.IP "\fB\-n \-\-no\-strict\fR" 4
.IX Item "-n --no-strict"
This option provides a workaround for some search pattern issues that
are known to occur. For example:
.Sp
.Vb 1
\& % clivescan "http://video.google.com/videosearch?q=inurl%3Abreak"
.Ve
.Sp
Does not return any break.com videos even though the page lists them.
This happens because clivescan assumes that the domain break.com can
be found in the \s-1URL\s0. To override this restrictive default behaviour:
.Sp
.Vb 1
\& % clivescan -S "http://video.google.com/videosearch?q=inurl%3Abreak"
.Ve
.PP
\&\fB\s-1HTTP\s0 Options\fR
.IP "\fB\-U \-\-agent=\fR\fIstring\fR" 4
.IX Item "-U --agent=string"
Identify as \fIstring\fR to the \s-1HTTP\s0 server. Defaults to \*(L"Mozilla/5.0\*(R".
.IP "\fB\-y \-\-proxy=\fR\fIaddress\fR" 4
.IX Item "-y --proxy=address"
Use \fIaddress\fR for \s-1HTTP\s0 proxy, e.g. http://foo:1234. If http_proxy
environment variable is defined, it will be used.
.IP "\fB\-X \-\-no\-proxy\fR" 4
.IX Item "-X --no-proxy"
Do not use the defined \s-1HTTP\s0 proxy (\fB\-\-proxy\fR, config or http_proxy).
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "% clivescan youtube.com video.google.com" 4
.IX Item "% clivescan youtube.com video.google.com"
Scans both, Youtube and GoogleVideo front pages for video links.
.IP "% cat >> url.lst" 4
.IX Item "% cat >> url.lst"
.Vb 4
\& http://video.google.com
\& http://youtube.com/communitychannel
\& http://sevenload.com
\& http://break.com
.Ve
.IP "% cat url.lst | clivescan" 4
.IX Item "% cat url.lst | clivescan"
Reads input from \s-1UNIX\s0 pipe.
.ie n .IP "% clivescan \-\-opts=""\-f mp4""" 4
.el .IP "% clivescan \-\-opts=``\-f mp4''" 4
.IX Item "% clivescan --opts=-f mp4"
Appends the \fIopts\fR to the \fIclive\fR\|(1) call.
.IP "% clivescan \-\-all http://youtube.com" 4
.IX Item "% clivescan --all http://youtube.com"
Grabs all found videos from the Youtube front page.
.SH "FILES"
.IX Header "FILES"
clivescan searches the ~/.config/clive\-utils directory for the config file.
You can override this by setting the \fB\s-1CLIVESCAN_HOME\s0\fR environment variable.
.IP "~/.config/clive\-utils/config" 4
.IX Item "~/.config/clive-utils/config"
Configuration file.
.IP "~/.config/clive\-utils/scan.prefs" 4
.IX Item "~/.config/clive-utils/scan.prefs"
\&\s-1GUI\s0 preferences (e.g. fonts, window position, sash coords, ...).
.SH "CONFIG"
.IX Header "CONFIG"
.Vb 1
\& ## Example config file for clivescan.
.Ve
.PP
.Vb 3
\& [clive]
\&   path = /usr/local/bin/clive
\&   opts = -f mp4
.Ve
.PP
.Vb 3
\& [http]
\&   agent = Mozilla/5.0
\&   proxy = http://foo:1234
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIclive\fR\|(1) \fIclivefeed\fR\|(1)
.SH "OTHER"
.IX Header "OTHER"
Project: http://googlecode.com/p/clive\-utils/
.PP
A clive-utils development repository can be obtained from:
.PP
.Vb 1
\&    % git clone git://repo.or.cz/clive-utils.git
.Ve
.PP
Patches welcome.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Toni Gundogdu <legatvs@gmail.com>
