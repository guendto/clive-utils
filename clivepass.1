.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.35
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "clivepass 1"
.TH clivepass 1 "2009-03-23" "2.1.4" "clivepass manual"
.SH "NAME"
clivepass \- the login password utility for clive
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
clivepass [option]...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
clivepass is a replacement for stored plain-text website login passwords used
with \fIclive\fR\|(1). It keeps website login passwords encrypted in a repository
file that can be accessed with a global passphrase. Typically these login
passwords are passed in plain-text form to \fIclive\fR\|(1) on command line or
from a config file.
.PP
Note that even though the passwords are encrypted on disk, they are passed
in plain-text over the network. This means the passwords are still visible to
anyone intercepting the network traffic.
.PP
Historically, a similar utility existed as part of clive 1.0 but was removed
in clive 2.0 and later rewritten in Perl as part of the \fBclive-utils\fR project
which is a set of additional utilities for \fIclive\fR\|(1).
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h \-\-help\fR" 4
.IX Item "-h --help"
Show help and exit.
.IP "\fB\-v \-\-version\fR" 4
.IX Item "-v --version"
Show version and exit.
.IP "\fB\-c \-\-create\fR" 4
.IX Item "-c --create"
Create a new passwd file. See also \*(L"\s-1FILES\s0\*(R".
.IP "\fB\-a \-\-add=\fR\fIusername\fR" 4
.IX Item "-a --add=username"
Add a new login for \fIusername\fR.
.IP "\fB\-e \-\-edit=\fR\fIusername\fR" 4
.IX Item "-e --edit=username"
Change login password for \fIusername\fR.
.IP "\fB\-g \-\-get=\fR\fIusername\fR" 4
.IX Item "-g --get=username"
Dump \fIusername\fR decrypted login password to stdout.
.IP "\fB\-s \-\-show\fR" 4
.IX Item "-s --show"
Dump all saved login usernames to stdout.
.IP "\fB\-d \-\-delete=\fR\fIusername\fR" 4
.IX Item "-d --delete=username"
Delete \fIusername\fR from passwd file.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "Create new password repository file:" 4
.IX Item "Create new password repository file:"
% clivepass \-c
.ie n .IP "Add ""myusername"" to the repository:" 4
.el .IP "Add ``myusername'' to the repository:" 4
.IX Item "Add myusername to the repository:"
% clivepass \-a myusername
.Sp
Note that \*(L"myusername\*(R" should be the login username for the website.
.ie n .IP "Get login password for ""myusername"":" 4
.el .IP "Get login password for ``myusername'':" 4
.IX Item "Get login password for myusername:"
% clivepass \-g myusername
.Sp
There is a more comprehensive example of \fIclive\fR\|(1) using \fIclivepass\fR\|(1)
in the \fIclive\fR\|(1) manual page.
.SH "FILES"
.IX Header "FILES"
clivepass searches the ~/.config/clive\-utils directory for the config file.
You can override this by setting the \fB\s-1CLIVEPASS_HOME\s0\fR environment variable.
.IP "~/.config/clive\-utils/passwd" 4
.IX Item "~/.config/clive-utils/passwd"
Password file. Contains the salted passphrase hash and login usernames and
encrypted passwords.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIclive\fR\|(1) \fIclivescan\fR\|(1) \fIclivefeed\fR\|(1)
.SH "OTHER"
.IX Header "OTHER"
Project page:
  <http://googlecode.com/p/clive\-utils/>
.PP
Development repository can be cloned with:
  % git clone git://repo.or.cz/clive\-utils.git
.PP
For release announcements, subscribe to the project at:
  <http://freshmeat.net/projects/clive\-utils/>
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Toni Gundogdu <legatvs@gmail.com>
